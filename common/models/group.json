{
  "name": "Group",
  "base": "PersistedModel",
  "idInjection": true,
  "options": {
    "validateUpsert": true,
    "postgresql": {
      "scheme": "picksapp",
      "table": "Group"
    }
  },
  "properties": {
    "name": {
      "type": "string",
      "required": true,
      "index": {
        "unique": true
      }
    },
    "isPrivate": {
      "type": "boolean",
      "required": true,
      "default": false
    },
    "creator": {
      "type": "number",
      "required": true
    },
    "participants": {
      "type": [
        "number"
      ]
    },
    "currentSeason": {
      "type": "number"
    }
  },
  "validations": [],
  "relations": {},
  "acls": [
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "DENY"
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW"
    }
  ],
  "methods": {
    "prototype.join": {
      "accepts": [
        {
          "arg": "userId",
          "type": "number",
          "required": true,
          "description": "Model id of the user that wants to join the group.",
          "http": {
            "source": "form"
          }
        },
        {
          "arg": "req",
          "type": "object",
          "required": true,
          "http": {
            "source": "req"
          }
        }
      ],
      "returns": [],
      "description": "Allows an user to join a public group.",
      "http": [
        {
          "path": "/join",
          "verb": "post"
        }
      ]
    },
    "prototype.participantsInGroup": {
      "accepts": [
        {
          "arg": "req",
          "type": "object",
          "required": true,
          "http": {
            "source": "req"
          }
        }
      ],
      "returns": [
        {
          "arg": "results",
          "type": "array",
          "root": true,
          "description": "An array of picksuser objects."
        }
      ],
      "description": "Gets a list of users that are part of the group.",
      "http": [
        {
          "path": "/participants",
          "verb": "get"
        }
      ]
    },
    "groupsForUser": {
      "accepts": [
        {
          "arg": "userId",
          "type": "number",
          "required": true,
          "description": "Model id of the user that created or is participanting in a group.",
          "http": {
            "source": "query"
          }
        },
        {
          "arg": "q",
          "type": "string",
          "required": false,
          "description": "A search query. This will filter groups by the name containg the given query. When provided, the results are returned in alphabetical order.",
          "http": {
            "source": "query"
          }
        }
      ],
      "returns": [
        {
          "arg": "results",
          "type": "array",
          "root": true,
          "description": "An array of group objects."
        }
      ],
      "description": "Retrieves all groups that a user has created or is participating in.",
      "http": [
        {
          "path": "/groups-user",
          "verb": "get"
        }
      ]
    },
    "publicGroups": {
      "accepts": [
        {
          "arg": "q",
          "type": "string",
          "required": false,
          "description": "A search query. This will filter groups by the name containg the given query. When provided, the results are returned in alphabetical order.",
          "http": {
            "source": "query"
          }
        }
      ],
      "returns": [
        {
          "arg": "results",
          "type": "array",
          "root": true,
          "description": "An array of group objects."
        }
      ],
      "description": "Retrieves all public groups.",
      "http": [
        {
          "path": "/groups-public",
          "verb": "get"
        }
      ]
    }
  }
}
